
const path = require('path');
const fs = require('fs');

// load PDF list:
let pdf_list = fs.readFileSync('all_pdf_files.lst', 'utf8')
	.split('\n')
	.map((l) => {
		l = l.trim();
		l = l.replace(/^\.[\/\\]/, '');
		l = l.replace(/[\\]/g, '/');
		return l;
	})
	.filter((l) => !!l);
//console.log(pdf_list);

// generate the mujstest script:
let out = [];
let out2 = [];
let out3 = [];
out.push(`
% mujstest script generated by mk_mupdf_mujstest_script
%
% Run this script using the latest GerHobbelt/mupdf::mujstest tool
`);

pdf_list.forEach((l) => {
	let bnl = path.basename(l);
	let bnln = bnl.replace(/\.pdf$/i, '');
	let lp = path.dirname(l);
if (0)
	out.push(`
% ---------------------------------------------------------------------------------------------------------------
% PDF: ${l}
% dir: ${lp}
% name: ${bnl}
% base: ${bnln}

% CD ${ __dirname.replace(/[\\]/g, '/') }
CD {SCRIPTDIR}

MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.showT.txt" -b "${l}"  trailer 
MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.showX.txt" -b "${l}"  xref 
MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.showP.txt" -b "${l}"  pages

MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.showA.txt" -b "${l}"  trailer xref pages grep outline js form trailer/* Root/* Root/Metadata 0/* 1/* 2/* 3/* 4/* 5/* 6/* 7/* 8/* 9/* 10/* 11/* 12/* 13/* trailer/Info trailer/Info/Author

	`);
	out2.push(`
% ---------------------------------------------------------------------------------------------------------------
% PDF: ${l}
% dir: ${lp}
% name: ${bnl}
% base: ${bnln}

% CD ${ __dirname.replace(/[\\]/g, '/') }
CD {SCRIPTDIR}

MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.ocr.html" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace,dehyphenate -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.txt" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.trace" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.bbox" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.xmltext" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.stext" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.html" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.img.png" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

% MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.img.psd" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

MUTOOL muconvert -o "__mujstest/${lp}/${bnln}.convert.pdf" -W 1200 -H 1800 "${l}"

MUTOOL muraster -o "__mujstest/${lp}/${bnln}/%04d.raster.png" -s mt -r 150 -P "${l}"

MUTOOL trace -o "__mujstest/${lp}/${bnln}/%04d.trace.txt" -W 1200 -H 1800 "${l}"

MUTOOL clean -gggg -D -c -s -AA "${l}" "__mujstest/${lp}/${bnln}.clean.pdf"

% MUTOOL extract -o "__mujstest/${lp}/${bnln}/%04d.extract." -r "${l}"

MUTOOL info -o "__mujstest/${lp}/${bnln}/%04d.info.txt" -F -I -M -P -S -X "${l}"

MUTOOL pages -o "__mujstest/${lp}/${bnln}/%04d.pages.txt" "${l}"

MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.show.txt" -b "${l}"  trailer xref pages grep outline js form trailer/* Root/* Root/Metadata 0/* 1/* 2/* 3/* 4/* 5/* 6/* 7/* 8/* 9/* 10/* 11/* 12/* 13/* trailer/Info trailer/Info/Author

MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.xml-meta.txt" -b "${l}"  Root/Metadata 

	`);
	out3.push(`
% ---------------------------------------------------------------------------------------------------------------
% PDF: ${l}
% dir: ${lp}
% name: ${bnl}
% base: ${bnln}

% CD ${ __dirname.replace(/[\\]/g, '/') }
CD {SCRIPTDIR}

MUTOOL muconvert -o "__mujstest/${lp}/${bnln}/%04d.convert.text" -W 1200 -H 1800 "${l}"
MUTOOL muconvert -o "__mujstest/${lp}/${bnln}/%04d.convert.html" -W 1200 -H 1800 "${l}"
MUTOOL muconvert -o "__mujstest/${lp}/${bnln}/%04d.convert.stext" -W 1200 -H 1800 "${l}"
MUTOOL muconvert -o "__mujstest/${lp}/${bnln}/%04d.convert.png" -W 1200 -H 1800 "${l}"

MUTOOL muraster -o "__mujstest/${lp}/${bnln}/%04d.raster.pkm" -s mt -r 150 -P "${l}"

%MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.trace" -s mtf5 -r 150 "${l}"
%MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.txt" -s mtf5 -r 150 "${l}"
%MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.stext" -s mtf5 -r 150 "${l}"
%MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.html" -s mtf5 -r 150 "${l}"
%MUTOOL mudraw -o "__mujstest/${lp}/${bnln}/%04d.png" -s mtf5 -r 150 "${l}"

MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.showT.txt" -b "${l}"  trailer 
MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.showX.txt" -b "${l}"  xref 
MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.showP.txt" -b "${l}"  pages
MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.showG.txt" -b "${l}"  grep
MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.showO.txt" -b "${l}"  outline
MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.showJ.txt" -b "${l}"  js
MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.showA.txt" -b "${l}"  trailer/Info
MUTOOL show -o "__mujstest/${lp}/${bnln}/%04d.showL.txt" -b "${l}"  Root/Pages/*

	`);
})

fs.writeFileSync('all_pdf_files.mujstest', out.join('\n') + '\n\n\n' + out2.join('\n') + '\n\n\n' + out3.join('\n'), 'utf8');






























// load PDF list:
pdf_list = fs.readFileSync('unicode_spec_pdf_files.lst', 'utf8')
	.split('\n')
	.map((l) => {
		l = l.trim();
		l = l.replace(/^\.[\/\\]/, '');
		l = l.replace(/[\\]/g, '/');
		return l;
	})
	.filter((l) => !!l);
//console.log(pdf_list);

// generate the mujstest script:
out = [];
out2 = [];
out3 = [];
out.push(`
% mujstest script generated by mk_mupdf_mujstest_script
%
% Run this script using the latest GerHobbelt/mupdf::mujstest tool
`);

pdf_list.forEach((l) => {
	let bnl = path.basename(l);
	let bnln = bnl.replace(/\.pdf$/i, '');
	let lp = path.dirname(l);

	out2.push(`
% ---------------------------------------------------------------------------------------------------------------
% PDF: ${l}
% dir: ${lp}
% name: ${bnl}
% base: ${bnln}

% CD ${ __dirname.replace(/[\\]/g, '/') }
CD {SCRIPTDIR}

MUTOOL mudraw -o "__unitest/${lp}/${bnln}/%04d.ocr.html" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace,dehyphenate -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__unitest/${lp}/${bnln}/%04d.txt" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__unitest/${lp}/${bnln}/%04d.stext" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__unitest/${lp}/${bnln}/%04d.png" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

% MUTOOL muconvert -o "__unitest/${lp}/${bnln}.convert.pdf" -W 1200 -H 1800 "${l}"

MUTOOL muraster -F ppm -o "__unitest/${lp}/${bnln}/%04d.raster.png" -s mt -r 150 -P "${l}"

% MUTOOL trace -o "__unitest/${lp}/${bnln}/%04d.trace.txt" -W 1200 -H 1800 "${l}"

% MUTOOL clean -gggg -D -c -s -AA "${l}" "__unitest/${lp}/${bnln}.clean.pdf"

% MUTOOL extract -o "__unitest/${lp}/${bnln}.extract." -r "${l}"

MUTOOL info -o "__unitest/${lp}/${bnln}/%04d.info.txt" -F -I -M -P -S -X "${l}"

MUTOOL pages -o "__unitest/${lp}/${bnln}/%04d.pages.txt" "${l}"

MUTOOL show -o "__unitest/${lp}/${bnln}/%04d.show.txt" -b "${l}"  trailer xref pages grep outline js form trailer/* Root/* Root/Metadata 0/* 1/* 2/* 3/* 4/* 5/* 6/* 7/* 8/* 9/* 10/* 11/* 12/* 13/* trailer/Info trailer/Info/Author

	`);
});

fs.writeFileSync('unicode_spec_pdf_files.mujstest', out.join('\n') + '\n\n\n' + out2.join('\n') + '\n\n\n' + out3.join('\n'), 'utf8');































// load PDF list:
pdf_list = fs.readFileSync('crashing_pdf_files.lst', 'utf8')
	.split('\n')
	.map((l) => {
		l = l.trim();
		l = l.replace(/^\.[\/\\]/, '');
		l = l.replace(/[\\]/g, '/');
		return l;
	})
	.filter((l) => !!l);
//console.log(pdf_list);

// generate the mujstest script:
out = [];
out2 = [];
out3 = [];
out.push(`
% mujstest script generated by mk_mupdf_mujstest_script
%
% Run this script using the latest GerHobbelt/mupdf::mujstest tool
`);

pdf_list.forEach((l) => {
	let bnl = path.basename(l);
	let bnln = bnl.replace(/\.pdf$/i, '');
	let lp = path.dirname(l);

	out2.push(`
% ---------------------------------------------------------------------------------------------------------------
% PDF: ${l}
% dir: ${lp}
% name: ${bnl}
% base: ${bnln}

% CD ${ __dirname.replace(/[\\]/g, '/') }
CD {SCRIPTDIR}

MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d-x150.ocr.html" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace,dehyphenate -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d-x72.ocr.html" -s mtf5 -x preserve-ligatures,preserve-whitespace,dehyphenate -y l "${l}"

MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d.txt" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d.stext" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d.png" -s mtf5 -r 150 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

% MUTOOL muconvert -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}.convert.pdf" -W 1200 -H 1800 "${l}"

MUTOOL muraster -F ppm -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d.raster.png" -s mt -r 150 -P "${l}"

% MUTOOL trace -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d.trace.txt" -W 1200 -H 1800 "${l}"

MUTOOL clean -gggg -D -c -s -AA "${l}" "__mujstest/CrashingFiles-T1/${lp}/${bnln}.clean.pdf"

% MUTOOL extract -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}.extract." -r "${l}"

MUTOOL info -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d.info.txt" -F -I -M -P -S -X "${l}"

MUTOOL pages -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d.pages.txt" "${l}"

MUTOOL show -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d.show.txt" -b "${l}"  trailer xref pages grep outline js form trailer/* Root/* Root/Metadata 0/* 1/* 2/* 3/* 4/* 5/* 6/* 7/* 8/* 9/* 10/* 11/* 12/* 13/* trailer/Info trailer/Info/Author

MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d-x300.ocr.html" -s mtf5 -r 300 -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d-x300.txt" -s mtf5 -r 300 -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d-x300.trace" -s mtf5 -r 300 -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d-x300.bbox" -s mtf5 -r 300 -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d-x300.xmltext" -s mtf5 -r 300 -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d-x300.stext" -s mtf5 -r 300 -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d-x300.html" -s mtf5 -r 300 -y l -T 3 -P -B 50 "${l}"

MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d-x300.img.png" -s mtf5 -r 300 -y l -T 3 -P -B 50 "${l}"

% MUTOOL mudraw -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d-x300.img.psd" -s mtf5 -r 300 -x preserve-ligatures,preserve-whitespace -y l -T 3 -P -B 50 "${l}"

MUTOOL show -o "__mujstest/CrashingFiles-T1/${lp}/${bnln}/%04d.xml-meta.txt" -b "${l}"  Root/Metadata 

	`);
});

fs.writeFileSync('crashing_pdf_files.mujstest', out.join('\n') + '\n\n\n' + out2.join('\n') + '\n\n\n' + out3.join('\n'), 'utf8');

